C51 COMPILER V9.59.0.0   CLOCK                                                             08/20/2025 13:11:52 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE CLOCK
OBJECT MODULE PLACED IN .\Objects\clock.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE clock.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\clo
                    -ck.lst) TABS(2) OBJECT(.\Objects\clock.obj)

line level    source

   1          #include <reg51.h>
   2          
   3          #define lcd_data P1
   4          sbit RS = P2^0;
   5          sbit RW = P2^1;
   6          sbit EN = P2^2;
   7          
   8          sbit SDA = P3^3;
   9          sbit SCL = P3^2;
  10          
  11          void delay(unsigned int ms) {
  12   1          unsigned int i, j;
  13   1          for(i = 0; i < ms; i++)
  14   1              for(j = 0; j < 1275; j++);
  15   1      }
  16          
  17          void lcd_cmd(unsigned char cmd) {
  18   1          RS = 0; RW = 0;
  19   1          lcd_data = cmd;
  20   1          EN = 1; delay(2); EN = 0;
  21   1      }
  22          
  23          void lcd_char(unsigned char val) {
  24   1          RS = 1; RW = 0;
  25   1          lcd_data = val;
  26   1          EN = 1; delay(2); EN = 0;
  27   1      }
  28          
  29          void lcd_string(char *s) {
  30   1          while(*s) lcd_char(*s++);
  31   1      }
  32          
  33          void lcd_init() {
  34   1          lcd_cmd(0x38); 
  35   1          lcd_cmd(0x0C); 
  36   1          lcd_cmd(0x01); 
  37   1          lcd_cmd(0x80); 
  38   1      }
  39          
  40          void i2c_start() {
  41   1          SDA = 1; SCL = 1;
  42   1          SDA = 0; SCL = 0;
  43   1      }
  44          void i2c_stop() {
  45   1          SDA = 0; SCL = 1;
  46   1          SDA = 1;
  47   1      }
  48          void i2c_write(unsigned char dat) {
  49   1          unsigned char i;
  50   1          for(i=0; i<8; i++) {
  51   2              SDA = (dat & 0x80) ? 1 : 0;
  52   2              SCL = 1; dat <<= 1; SCL = 0;
  53   2          }
  54   1          SDA = 1; SCL = 1; SCL = 0; 
C51 COMPILER V9.59.0.0   CLOCK                                                             08/20/2025 13:11:52 PAGE 2   

  55   1      }
  56          unsigned char i2c_read() {
  57   1          unsigned char i, dat=0;
  58   1          SDA = 1; 
  59   1          for(i=0; i<8; i++) {
  60   2              SCL = 1;
  61   2              dat = (dat<<1) | SDA;
  62   2              SCL = 0;
  63   2          }
  64   1       
  65   1          SDA = 1; SCL = 1; SCL = 0;
  66   1          return dat;
  67   1      }
  68          
  69          
  70          #define RTC_ADDR_W 0xD0
  71          #define RTC_ADDR_R 0xD1
  72          
  73          unsigned char dec_to_bcd(unsigned char val) {
  74   1          return ((val/10)<<4) | (val%10);
  75   1      }
  76          unsigned char bcd_to_dec(unsigned char val) {
  77   1          return ((val>>4)*10) + (val & 0x0F);
  78   1      }
  79          
  80          void rtc_set_time(unsigned char hh, unsigned char mm, unsigned char ss) {
  81   1          i2c_start();
  82   1          i2c_write(RTC_ADDR_W);
  83   1          i2c_write(0x00);  
  84   1          i2c_write(dec_to_bcd(ss) & 0x7F);
  85   1          i2c_write(dec_to_bcd(mm));
  86   1          i2c_write(dec_to_bcd(hh));
  87   1          i2c_stop();
  88   1      }
  89          
  90          
  91          
  92          unsigned char rtc_read(unsigned char addr) {
  93   1          unsigned char val;
  94   1          i2c_start();
  95   1          i2c_write(RTC_ADDR_W);
  96   1          i2c_write(addr);
  97   1          i2c_start();
  98   1          i2c_write(RTC_ADDR_R);
  99   1          val = i2c_read();
 100   1          i2c_stop();
 101   1          return val;
 102   1      }
 103          
 104          
 105          void main() {
 106   1          unsigned char sec, min, hr;
 107   1          lcd_init();
 108   1      
 109   1          rtc_set_time(12, 0, 0); 
 110   1      
 111   1          lcd_cmd(0x80);
 112   1          lcd_string("Time:");
 113   1      
 114   1          while(1) {
 115   2              sec = bcd_to_dec(rtc_read(0x00));
 116   2              min = bcd_to_dec(rtc_read(0x01));
C51 COMPILER V9.59.0.0   CLOCK                                                             08/20/2025 13:11:52 PAGE 3   

 117   2              hr  = bcd_to_dec(rtc_read(0x02));
 118   2      
 119   2              lcd_cmd(0xC0);
 120   2              lcd_char((hr/10)+'0');
 121   2              lcd_char((hr%10)+'0');
 122   2              lcd_char(':');
 123   2              lcd_char((min/10)+'0');
 124   2              lcd_char((min%10)+'0');
 125   2              lcd_char(':');
 126   2              lcd_char((sec/10)+'0');
 127   2              lcd_char((sec%10)+'0');
 128   2      
 129   2              delay(10);
 130   2          }
 131   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    453    ----
   CONSTANT SIZE    =      6    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
